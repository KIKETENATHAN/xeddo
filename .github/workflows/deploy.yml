name: Deploy Laravel to cPanel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, zip
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer Dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction

    - name: Install NPM Dependencies
      run: npm ci

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

    - name: Build assets
      run: npm run build

    - name: Create deployment archive
      run: |
        mkdir deployment
        cp -r app deployment/
        cp -r bootstrap deployment/
        cp -r config deployment/
        cp -r database deployment/
        cp -r resources deployment/
        cp -r routes deployment/
        cp -r storage deployment/
        cp -r vendor deployment/
        cp -r public deployment/
        cp artisan deployment/
        cp composer.json deployment/
        cp composer.lock deployment/
        cp .env.example deployment/
        tar -czf deployment.tar.gz deployment/

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: laravel-deployment
        path: deployment.tar.gz

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download deployment artifact
      uses: actions/download-artifact@v4
      with:
        name: laravel-deployment

    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: /public_html/temp/
        
    - name: Extract and setup on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          cd /home/${{ secrets.SSH_USERNAME }}
          
          # Backup current deployment
          if [ -d "laravel_app_backup" ]; then rm -rf laravel_app_backup; fi
          if [ -d "laravel_app" ]; then mv laravel_app laravel_app_backup; fi
          
          # Extract new deployment
          cd public_html/temp
          tar -xzf deployment.tar.gz
          mv deployment ../../../laravel_app
          
          # Set up environment
          cd ../../../laravel_app
          cp .env.example .env
          
          # Update .env with production values
          sed -i 's/APP_ENV=local/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=false/' .env
          sed -i "s|APP_URL=http://localhost|APP_URL=https://${{ secrets.DOMAIN_NAME }}|" .env
          sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
          sed -i "s/DB_DATABASE=laravel/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
          sed -i "s/DB_USERNAME=root/DB_USERNAME=${{ secrets.DB_USERNAME }}/" .env
          sed -i "s/DB_PASSWORD=/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env
          
          # Set permissions
          chmod -R 755 storage bootstrap/cache
          chown -R ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} storage bootstrap/cache
          
          # Copy public files to web root
          cp -r public/* ../public_html/
          
          # Run Laravel commands
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Run migrations
          php artisan migrate --force
          
          # Clean up
          rm -rf ../public_html/temp
